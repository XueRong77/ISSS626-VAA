---
title: "COVID-19 Impacts on Thailand Tourism: A Geospatial Analysis in R"
author: "XueRong"
format: html
---

## Introduction

This analysis investigates the impact of COVID-19 on Thailand's tourism economy at the province level using spatial and spatio-temporal statistics. The goal is to explore patterns in tourist arrival data and detect any spatial clusters, hotspots, and changes over time.

## Data Description

### Shapefiles

We have multiple shapefiles representing different administrative levels:

-   **gdf0**: National boundary of Thailand (`ADM0_EN`, `ADM0_TH`).
-   **gdf1**: Provincial boundaries (`ADM1_EN`, `ADM1_TH`).
-   **gdf2**: District boundaries (`ADM2_EN`, `ADM2_TH`).
-   **gdf3**: Sub-district boundaries (`ADM3_EN`, `ADM3_TH`).
-   **gdf**: LINESTRING data representing coastal or transportation routes.

### Tourism Data

The tourism data file (`thailand_domestic_tourism_2019_2023_ver2.csv`) contains the following fields: - `date`: The year of the data. - `province_eng`: Province name in English. - `province_thai`: Province name in Thai. - `region_eng`: Region name in English. - `region_thai`: Region name in Thai. - `variable`: The variable being measured (e.g., tourist arrivals). - `value`: The value of the measured variable.

## Libraries

```{r}
# Load necessary libraries
library(sf)
library(ggplot2)
library(dplyr)
library(spdep)
library(tmap)
library(leaflet)
library(reshape2)
library(stats)
library(cluster)
library(tidyr)
library(rmapshaper)
```

## Data Loading

We load the shapefile for Thailand's administrative boundaries and the tourism dataset.

```{r}
# Load shapefile (Thailand provinces) and tourism data
#shapefile_path <- '/Users/sharon/OneDrive - Singapore Management University/ISSS626 Data/Take_home_Ex/Take_home_Ex02/data/tha_adm_rtsd_itos_20210121_shp/tha_admbndl_admALL_rtsd_itos_20220121.shp'
#gdf <- st_read(shapefile_path)
```

```{r}
#shapefile_path <- '/Users/sharon/OneDrive - Singapore Management University/ISSS626 Data/Take_home_Ex/Take_home_Ex02/data/tha_adm_rtsd_itos_20210121_shp/tha_admbnda_adm0_rtsd_20220121.shp'
#gdf0 <- st_read(shapefile_path)
```

```{r}
shapefile_path <- '/Users/sharon/OneDrive - Singapore Management University/ISSS626 Data/Take_home_Ex/Take_home_Ex02/data/tha_adm_rtsd_itos_20210121_shp/tha_admbnda_adm1_rtsd_20220121.shp'
gdf1 <- st_read(shapefile_path)
head(gdf1)
```

```{r}
#shapefile_path <- '/Users/sharon/OneDrive - Singapore Management University/ISSS626 Data/Take_home_Ex/Take_home_Ex02/data/tha_adm_rtsd_itos_20210121_shp/tha_admbnda_adm2_rtsd_20220121.shp'
#gdf2 <- st_read(shapefile_path)
```

```{r}
#shapefile_path <- '/Users/sharon/OneDrive - Singapore Management University/ISSS626 Data/Take_home_Ex/Take_home_Ex02/data/tha_adm_rtsd_itos_20210121_shp/tha_admbnda_adm3_rtsd_20220121.shp'
# <- st_read(shapefile_path)
```

# Load tourism dataset

```{r}
tourism_data_path <- '/Users/sharon/OneDrive - Singapore Management University/ISSS626 Data/Take_home_Ex/Take_home_Ex02/data/thailand_domestic_tourism_2019_2023_ver2.csv'
tourism_df <- read.csv(tourism_data_path)
head(tourism_df)
```

## Data Preparation

We will merge the tourism data with the province-level shapefile using the province names in English.

The current dataset uses the first day of each month to represent the date, so we will extract the year and month to perform the analysis.

```{r}
# Convert the 'date' column to Date format if it's not already
tourism_df$date <- as.Date(tourism_df$date, format = "%Y-%m-%d")

# Extract year and month from the date
tourism_df$year <- format(tourism_df$date, "%Y")
tourism_df$month <- format(tourism_df$date, "%m")

# Merge the datasets on province name
merged_data <- merge(gdf1, tourism_df, by.x = "ADM1_EN", by.y = "province_eng")

# Display the first few rows of the merged data
head(merged_data)
```

## Spatial Analysis Moran’s I

We will calculate Moran’s I to detect spatial clustering of tourist arrivals.

```{r}
# Create spatial weights matrix using Queen's method
nb <- poly2nb(merged_data)
lw <- nb2listw(nb, style = "W")

# Moran's I test
moran_test <- moran.test(merged_data$value, lw)

# Print Moran's I test results
moran_test
```

Key Results:

```         
•   Moran’s I Statistic: -0.0025
•   p-value: 0.5
•   Variance: 8.712666e-17
```

Interpretation:

```         
•   A Moran’s I statistic close to zero indicates no significant spatial autocorrelation.
•   The p-value of 0.5 suggests that the observed spatial pattern is likely due to random distribution rather than significant clustering or dispersion.
```

Conclusion:

The results indicate that tourist arrivals are randomly distributed across provinces, with no statistically significant spatial clustering observed in the data.

### Getis-Ord Gi\* Analysis

We will conduct the Getis-Ord Gi\* analysis to identify hot and cold spots of tourist arrivals.

```{r}
# Create spatial weights matrix for Getis-Ord analysis
getis_nb <- poly2nb(merged_data)
getis_lw <- nb2listw(getis_nb, style = "W")

# Calculate local Getis-Ord Gi*
local_gi <- localG(merged_data$value, getis_lw)

# Add results to the merged dataset
merged_data$Gi_star <- local_gi

# Map visualization for Getis-Ord Gi* to highlight hot and cold spots
tmap_mode("view")
tm_shape(merged_data) +
  tm_polygons("Gi_star", palette = "RdYlBu", title = "Hot & Cold Spots of Tourist Arrivals") +
  tm_layout(title = "Getis-Ord Gi* Analysis")
```
